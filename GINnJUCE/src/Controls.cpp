/*
==============================================================================

  This file was auto-generated by the GINnJUCE Transpiler. You're welcome!

==============================================================================
*/

#include "Controls.h"

Controls::Controls() {
   initializeImages();
   initializePaths();
   addAndMakeVisible(amp);
   addAndMakeVisible(filter);
   addAndMakeVisible(divider);
   addAndMakeVisible(param3);
   addAndMakeVisible(param2);
   addAndMakeVisible(param1);
   addAndMakeVisible(toggle3);
   addAndMakeVisible(toggle2);
   addAndMakeVisible(toggle1);
   addAndMakeVisible(wetSlider);
   
}

Controls::~Controls() {

}

void Controls::paint(Graphics& g) {

}

void Controls::resized() {
   amp.setBounds(0, 0, 500, 246);
   filter.setBounds(0, 0, 500, 246);
   divider.setBounds(0, 0, 500, 1);
   param3.setBounds(50, 30, 87, 88);
   param2.setBounds(210, 30, 87, 88);
   param1.setBounds(365, 30, 87, 88);
   toggle3.setBounds(62, 136, 64, 30);
   toggle2.setBounds(222, 136, 64, 30);
   toggle1.setBounds(377, 136, 64, 30);
   wetSlider.setBounds(19, 195, 471, 21);
}

void Controls::initializeImages() {
   // Image initialization for amp
   Image ampImage = ImageCache::getFromMemory(BinaryData::amp_jpg, BinaryData::amp_jpgSize);
   ampImage.multiplyAllAlphas(1.0f);
   amp.setImage(ampImage);
}

void Controls::initializePaths() {
   // Path initialization for filter
   Path filterPath;
   filterPath.startNewSubPath(Point<float>(500.0f, 246.5f));
   filterPath.cubicTo(
      Point<float>(500.0f, 246.5f),
      Point<float>(0.0f, 246.5f),
      Point<float>(0.0f, 246.5f)
   );
   filterPath.cubicTo(
      Point<float>(0.0f, 246.5f),
      Point<float>(0.0f, 0.5f),
      Point<float>(0.0f, 0.5f)
   );
   filterPath.cubicTo(
      Point<float>(0.0f, 0.5f),
      Point<float>(500.0f, 0.5f),
      Point<float>(500.0f, 0.5f)
   );
   filterPath.cubicTo(
      Point<float>(500.0f, 0.5f),
      Point<float>(500.0f, 246.5f),
      Point<float>(500.0f, 246.5f)
   );
   filterPath.closeSubPath();
   const PathStrokeType filterStroke (1.0f, PathStrokeType::JointStyle::mitered, PathStrokeType::EndCapStyle::butt);
   const FillType filterFill (Colour(0xd917181a));
   const FillType filterStrokeFill (Colour(0x00000000));
   filter.setPath(filterPath);
   filter.setStrokeType(filterStroke);
   filter.setFill(filterFill);
   filter.setStrokeFill(filterStrokeFill);
   
   // Path initialization for divider
   Path dividerPath;
   dividerPath.startNewSubPath(Point<float>(0.0f, 0.5f));
   dividerPath.cubicTo(
      Point<float>(0.0f, 0.5f),
      Point<float>(500.0f, 0.5f),
      Point<float>(500.0f, 0.5f)
   );
   const PathStrokeType dividerStroke (1.0f, PathStrokeType::JointStyle::mitered, PathStrokeType::EndCapStyle::butt);
   const FillType dividerFill (Colour(0x00000000));
   const FillType dividerStrokeFill (Colour(0xff939393));
   divider.setPath(dividerPath);
   divider.setStrokeType(dividerStroke);
   divider.setFill(dividerFill);
   divider.setStrokeFill(dividerStrokeFill);
}
