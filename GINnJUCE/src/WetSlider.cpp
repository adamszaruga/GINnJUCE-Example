/*==============================================================================  This file was auto-generated by the GINnJUCE Transpiler. You're welcome!==============================================================================*/#include "WetSlider.h"WetSlider::WetSlider() {   initializeText();   initializePaths();   addAndMakeVisible(dry);   addAndMakeVisible(wet);   addAndMakeVisible(path);   addAndMakeVisible(handle);   }WetSlider::~WetSlider() {}void WetSlider::paint(Graphics& g) {}void WetSlider::resized() {   dry.setBounds(0, 0, 40, 21);   wet.setBounds(429, 0, 42, 21);   path.setBounds(47, 8, 363, 1);   handle.setBounds(292, 0, 17, 17);}void WetSlider::initializeText() {   // Text initialization for dry   Font dryFont(String("Myriad"), String("Myriad-Roman"), 18.0f);   dryFont.setHorizontalScale(1.0f);   dry.setFont(dryFont);   dry.setColour(TextEditor::ColourIds::backgroundColourId, Colour(0x00000000));   dry.setColour(TextEditor::ColourIds::textColourId, Colour(0xfff1f1fa));   dry.setColour(TextEditor::ColourIds::outlineColourId , Colour(0x00000000));   dry.setColour(TextEditor::ColourIds::focusedOutlineColourId , Colour(0x00000000));   dry.setColour(TextEditor::ColourIds::shadowColourId , Colour(0x00000000));   dry.setText(      "DRY\n"   );   dry.moveCaretToTop(false);   dry.setCaretVisible(false);   dry.setReadOnly(true);   dry.setScrollbarsShown(false);   dry.setIndents(0, 0);   dry.setLineSpacing(1.20000002119276f);   dry.setMultiLine(true, false);      // Text initialization for wet   Font wetFont(String("Myriad"), String("Myriad-Roman"), 18.0f);   wetFont.setHorizontalScale(1.0f);   wet.setFont(wetFont);   wet.setColour(TextEditor::ColourIds::backgroundColourId, Colour(0x00000000));   wet.setColour(TextEditor::ColourIds::textColourId, Colour(0xfff1f1fa));   wet.setColour(TextEditor::ColourIds::outlineColourId , Colour(0x00000000));   wet.setColour(TextEditor::ColourIds::focusedOutlineColourId , Colour(0x00000000));   wet.setColour(TextEditor::ColourIds::shadowColourId , Colour(0x00000000));   wet.setText(      "WET\n"   );   wet.moveCaretToTop(false);   wet.setCaretVisible(false);   wet.setReadOnly(true);   wet.setScrollbarsShown(false);   wet.setIndents(0, 0);   wet.setLineSpacing(1.20000002119276f);   wet.setMultiLine(true, false);}void WetSlider::initializePaths() {   // Path initialization for path   Path pathPath;   pathPath.startNewSubPath(Point<float>(46.0f, 9.0f));   pathPath.cubicTo(      Point<float>(46.0f, 9.0f),      Point<float>(409.0f, 9.0f),      Point<float>(409.0f, 9.0f)   );   const PathStrokeType pathStroke (1.0f, PathStrokeType::JointStyle::mitered, PathStrokeType::EndCapStyle::butt);   const FillType pathFill (Colour(0x00000000));   const FillType pathStrokeFill (Colour(0xffcccccc));   path.setPath(pathPath);   path.setStrokeType(pathStroke);   path.setFill(pathFill);   path.setStrokeFill(pathStrokeFill);      // Path initialization for handle   Path handlePath;   handlePath.startNewSubPath(Point<float>(308.0f, 8.5f));   handlePath.cubicTo(      Point<float>(308.0f, 13.1943359375f),      Point<float>(304.1943359375f, 17.0f),      Point<float>(299.5f, 17.0f)   );   handlePath.cubicTo(      Point<float>(294.8056640625f, 17.0f),      Point<float>(291.0f, 13.1943359375f),      Point<float>(291.0f, 8.5f)   );   handlePath.cubicTo(      Point<float>(291.0f, 3.8056640625f),      Point<float>(294.8056640625f, 0.0f),      Point<float>(299.5f, 0.0f)   );   handlePath.cubicTo(      Point<float>(304.1943359375f, 0.0f),      Point<float>(308.0f, 3.8056640625f),      Point<float>(308.0f, 8.5f)   );   handlePath.closeSubPath();   const PathStrokeType handleStroke (1.0f, PathStrokeType::JointStyle::mitered, PathStrokeType::EndCapStyle::butt);   const FillType handleFill (Colour(0xfff1f1fa));   const FillType handleStrokeFill (Colour(0x00000000));   handle.setPath(handlePath);   handle.setStrokeType(handleStroke);   handle.setFill(handleFill);   handle.setStrokeFill(handleStrokeFill);}