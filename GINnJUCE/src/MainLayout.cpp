/*
==============================================================================

  This file was auto-generated by the GINnJUCE Transpiler. You're welcome!

==============================================================================
*/

#include "MainLayout.h"

MainLayout::MainLayout() {
   initializeText();
   initializePaths();
   setBounds(0,0, 500, 300);
   addAndMakeVisible(background);
   addAndMakeVisible(author);
   addAndMakeVisible(title);
   addAndMakeVisible(presetMenu);
   addAndMakeVisible(controls);
   
}

MainLayout::~MainLayout() {

}

void MainLayout::paint(Graphics& g) {

}

void MainLayout::resized() {
   background.setBounds(0, 0, 500, 300);
   author.setBounds(164, 27, 82, 15);
   title.setBounds(16, 8, 150, 41);
   presetMenu.setBounds(279, 14, 202, 25);
   controls.setBounds(0, 53, 500, 246);
}

void MainLayout::initializeText() {
   // Text initialization for author
   Font authorFont(String("Myriad Pro"), String("MyriadPro-Regular"), 12.0f);
   authorFont.setHorizontalScale(1.0f);
   author.setFont(authorFont);
   author.setColour(TextEditor::ColourIds::backgroundColourId, Colour(0x00000000));
   author.setColour(TextEditor::ColourIds::textColourId, Colour(0xff808080));
   author.setColour(TextEditor::ColourIds::outlineColourId , Colour(0x00000000));
   author.setColour(TextEditor::ColourIds::focusedOutlineColourId , Colour(0x00000000));
   author.setColour(TextEditor::ColourIds::shadowColourId , Colour(0x00000000));
   author.setText(
      "BY EQIP AUDIO\n"
   );
   author.moveCaretToTop(false);
   author.setCaretVisible(false);
   author.setReadOnly(true);
   author.setScrollbarsShown(false);
   author.setIndents(0, 0);
   author.setLineSpacing(1.20000004768372f);
   author.setMultiLine(true, false);
   
   // Text initialization for title
   Font titleFont(String("Raleway"), String("Raleway-Bold"), 36.0f);
   titleFont.setHorizontalScale(1.0f);
   title.setFont(titleFont);
   title.setColour(TextEditor::ColourIds::backgroundColourId, Colour(0x00000000));
   title.setColour(TextEditor::ColourIds::textColourId, Colour(0xfff1f1fa));
   title.setColour(TextEditor::ColourIds::outlineColourId , Colour(0x00000000));
   title.setColour(TextEditor::ColourIds::focusedOutlineColourId , Colour(0x00000000));
   title.setColour(TextEditor::ColourIds::shadowColourId , Colour(0x00000000));
   title.setText(
      "FUZZ-Q\n"
   );
   title.moveCaretToTop(false);
   title.setCaretVisible(false);
   title.setReadOnly(true);
   title.setScrollbarsShown(false);
   title.setIndents(0, 0);
   title.setLineSpacing(1.20000002119276f);
   title.setMultiLine(true, false);
}

void MainLayout::initializePaths() {
   // Path initialization for background
   Path backgroundPath;
   backgroundPath.startNewSubPath(Point<float>(500.0f, 300.0f));
   backgroundPath.cubicTo(
      Point<float>(500.0f, 300.0f),
      Point<float>(0.0f, 300.0f),
      Point<float>(0.0f, 300.0f)
   );
   backgroundPath.cubicTo(
      Point<float>(0.0f, 300.0f),
      Point<float>(0.0f, 0.0f),
      Point<float>(0.0f, 0.0f)
   );
   backgroundPath.cubicTo(
      Point<float>(0.0f, 0.0f),
      Point<float>(500.0f, 0.0f),
      Point<float>(500.0f, 0.0f)
   );
   backgroundPath.cubicTo(
      Point<float>(500.0f, 0.0f),
      Point<float>(500.0f, 300.0f),
      Point<float>(500.0f, 300.0f)
   );
   backgroundPath.closeSubPath();
   const PathStrokeType backgroundStroke (1.0f, PathStrokeType::JointStyle::mitered, PathStrokeType::EndCapStyle::butt);
   const FillType backgroundFill (Colour(0xff17181a));
   const FillType backgroundStrokeFill (Colour(0x00000000));
   background.setPath(backgroundPath);
   background.setStrokeType(backgroundStroke);
   background.setFill(backgroundFill);
   background.setStrokeFill(backgroundStrokeFill);
}
